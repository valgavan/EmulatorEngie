within DetachedHouse_ENGIE_IBPSAP1.Construction.Apports;
model Q_rad_4

  parameter Real Q_occupant = 90
    "Apport thermique par occupant (en W/occupant)";
  parameter Real N_occupants = 0.1
    "Nombre d'occupants au m2 (en Occupant/m2)";
  parameter Real Q_autres = 16 "Autre apport thermique interne (en W/m2)";
  parameter Real S_tot = 7000 "Surface au sol totale du bâtiment (en m2)";

  Modelica.Blocks.Math.Gain gain(k=0.5*Q_occupant*N_occupants)
    annotation (Placement(transformation(extent={{10,60},{24,74}})));
  Modelica.Blocks.Math.Gain gain2(k=Q_autres)
    annotation (Placement(transformation(extent={{10,20},{24,34}})));
  Modelica.Blocks.Math.Add3 add3_1(k2=1/S_tot)
    annotation (Placement(transformation(extent={{44,44},{64,64}})));
  Modelica.Blocks.Interfaces.RealOutput Q_rad
    "Connector of Real output signals"
    annotation (Placement(transformation(extent={{100,44},{120,64}})));
  Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(
    tableOnFile=true,
    tableName="dat",
    columns={2},
    fileName=
        "C:/Users/VZ5325/Local/SEBI/HEAT/Stockage MCP/Modeles/eclairage_besoins.txt")
                 annotation (Placement(transformation(extent={{-2,40},{8,50}})));

  Modelica.Blocks.Math.Gain gain1(k=2)
    annotation (Placement(transformation(extent={{16,38},{30,52}})));
  Modelica.Blocks.Interfaces.RealInput Occupation "Input signal connector"
    annotation (Placement(transformation(extent={{-140,48},{-100,88}})));
  Modelica.Blocks.Interfaces.RealInput OtherLoads "Input signal connector"
    annotation (Placement(transformation(extent={{-140,8},{-100,48}})));
equation
  connect(gain.y, add3_1.u1) annotation (Line(
      points={{24.7,67},{33.35,67},{33.35,62},{42,62}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(add3_1.u3, gain2.y) annotation (Line(
      points={{42,46},{34,46},{34,27},{24.7,27}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(add3_1.y, Q_rad) annotation (Line(
      points={{65,54},{110,54}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(combiTimeTable.y[1], gain1.u) annotation (Line(points={{8.5,45},{
          11.25,45},{14.6,45}}, color={0,0,127}));
  connect(gain1.y, add3_1.u2) annotation (Line(points={{30.7,45},{35.35,45},
          {35.35,54},{42,54}}, color={0,0,127}));
  connect(gain.u, Occupation) annotation (Line(points={{8.6,67},{-45.7,67},
          {-45.7,68},{-120,68}}, color={0,0,127}));
  connect(gain2.u, OtherLoads) annotation (Line(points={{8.6,27},{-120,27},
          {-120,28}}, color={0,0,127}));
  annotation (                                 Diagram(coordinateSystem(
          preserveAspectRatio=false, extent={{-100,0},{100,100}})),
    Icon(coordinateSystem(extent={{-100,0},{100,100}})),
    Documentation(info="<html>
<h4>Calcul d&apos;un flux de transfert radiatif</h4>
<p>Ce flux d&eacute;pend : </p>
<ul>
<li>des autres &eacute;quipements (typiquement des ordinateurs)</li>
<li>de l&apos;&eacute;clairage (&agrave; partir d&apos;un fichier de donn&eacute;es)</li>
<li>des occupants (&agrave; 50&percnt;) en tenant compte d&apos;un certain foisonnement pour prendre en compte les vacances</li>
</ul>
<p><u>Formule de calcul</u></p>
<p><img src=\"modelica://Construction/Resources/Images/equations/equation-8cw1n4Ge.png\" alt=\"Q_rad = Q_autres*OtherLoads+Q_eclairage+0.5*Q_occupant*N_occupants*Occupation\"/></p>
</html>"));
end Q_rad_4;
